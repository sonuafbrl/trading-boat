version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: autotrader_dev
      POSTGRES_USER: autotrader
      POSTGRES_PASSWORD: autotrader_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autotrader -d autotrader_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://autotrader:autotrader_dev_password@postgres:5432/autotrader_dev
      - SECRET_KEY=dev-secret-key-not-for-production
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=dev-email@gmail.com
      - SMTP_PASSWORD=dev-app-password
      - FROM_EMAIL=dev-email@gmail.com
      - TELEGRAM_BOT_TOKEN=dev-telegram-bot-token
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  default:
    driver: bridge
